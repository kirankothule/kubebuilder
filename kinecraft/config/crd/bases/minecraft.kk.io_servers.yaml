
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: servers.minecraft.kk.io
spec:
  group: minecraft.kk.io
  names:
    kind: Server
    listKind: ServerList
    plural: servers
    singular: server
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Server is the Schema for the servers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServerSpec defines the desired state of Server
            properties:
              EULA:
                description: Do you agrree the EULA?
                type: boolean
              allowList:
                description: The list of user allow to connect to server. If this
                  list is empty then server is open to public
                items:
                  type: string
                type: array
              ops:
                description: The list of users who are admin on server
                items:
                  type: string
                type: array
              serverName:
                description: The name of the server that user may want to connect
                type: string
              serverType:
                description: The type of minecraft server we want to run e.g. VANILLA,
                  PAPER
                type: string
            type: object
          status:
            description: ServerStatus defines the observed state of Server
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
